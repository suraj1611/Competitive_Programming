ll n,q;
ll a[maxsize];
ll tree[maxsize];

void build(ll x,ll l,ll h)
{
	if(l==h)
	{
		tree[x]=a[l];
	}
	else
	{
		ll mid=(l+h)/2;
		build(2*x,l,mid);
		build(2*x+1,mid+1,h);
		tree[x]=min(tree[2*x],tree[2*x+1]);
	}
}

ll query(ll x,ll l,ll h,ll lt,ll rt)
{
	if(rt<l||lt>h) //no overlap
	{
		return mx;
	}
	if(lt<=l&&rt>=h) //total overlap
	{
		return tree[x];
	}
	//partial overlap
	ll mid=(l+h)/2;
	ll p1=query(2*x,l,mid,lt,rt);
	ll p2=query(2*x+1,mid+1,h,lt,rt);
	return min(p1,p2);
}

void update(ll node,ll l,ll h,ll x,ll y)
{
	if(l==h)
	{
		a[x]=y;
		tree[node]=y;
	}
	else
	{
		ll mid=(l+h)/2;
		if(x>=l&&x<=mid)
		{
			update(2*node,l,mid,x,y);
		}
		else
		{
			update(2*node+1,mid+1,h,x,y);
		}
		  tree[node] = min(tree[2*node],tree[2*node+1]);
	}
}
